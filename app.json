{
  "name": "teneo-khoros-bot-connector",
  "description": "Connects Teneo as a Bot with Khoros",
  "keywords": ["bot", "khoros", "Teneo", "twitter", "facebook", "nlp"],
  "repository": "https://github.com/jolzee/teneo-khoros-bot-connector",
  "buildpacks": [
    {
      "url": "https://github.com/heroku/heroku-buildpack-nodejs"
    }
  ],
  "env": {
    "REDIS_HOST": {
      "description": "Redis is used to persist access tokens and for Teneo session management. Examples 192.168.1.12 or myredishost.com",
      "required": true
    },
    "REDIS_PORT": {
      "description": "Port exposed by your Redis server. Default port is 6379",
      "value": 6379,
      "required": true
    },
    "REDIS_PASSWORD": {
      "description": "Password to access your Redis server",
      "required": true
    },
    "TENEO_BOT_NAME": {
      "description": "A name you want to give your Bot when registered with Khoros. Something like 'Teneo'",
      "required": true
    },
    "TENEO_SUPPORT_EMAIL": {
      "description": "An email address accociated with Khors for this Bot",
      "required": true
    },
    "TENEO_TIE_URL": {
      "description": "TIE Url - For example: https://<my-tie-domain>/<tie-ctx>/",
      "required": true
    },
    "TENEO_AVATAR_URL": {
      "description": "A URL to your bot's avatar",
      "required": true
    },
    "TENEO_CALLBACK_URL": {
      "description": "The URL that should be registered with Khoros as the webhook for incomming posts. Something like 'https://host-where-this-is-deployed.com:<possible-port>/'",
      "required": true
    },
    "KHOROS_BASE_API_URL": {
      "description": "The base URL for Khoros APIs - For example: https://api.app.lithium.com/bots/v3",
      "value": "https://api.app.lithium.com/bots/v3",
      "required": true
    },
    "KHOROS_BASE_TOKEN_URL": {
      "description": "https://<KHOROS_COMPANY_KEY>.response.lithium.com/api/v2/tokens/khorosapi/ownerId/",
      "value": "https://<KHOROS_COMPANY_KEY>.response.lithium.com/api/v2/tokens/khorosapi/ownerId/",
      "required": true
    },
    "KHOROS_ACCESS_TOKEN_CACHE_KEY": {
      "description": "Unique key in Redis against which the Khoros token is stored and retrieved. For example: ourKhorosBotAccessToken",
      "generator": "secret",
      "required": true
    },
    "KHOROS_CREDENTIALS_USERNAME": {
      "description": "Your Khoros username",
      "required": true
    },
    "KHOROS_CREDENTIALS_PASSWORD": {
      "description": "Your Khoros password",
      "required": true
    },
    "KHOROS_APP_ID": {
      "description": "Your assigned Khoros App Id",
      "required": true
    },
    "KHOROS_COMPANY_KEY": {
      "description": "The Khoros assigned company key",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_EXTERNAL_ID": {
      "description": "Twitter Handle External ID",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_AUTH_ACCOUNT_ID": {
      "description": "Twitter Devloper Auth Account ID",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_AUTH_CONSUMER_KEY": {
      "description": "Twitter Auth Consumer Key",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_AUTH_CONSUMER_SECRET": {
      "description": "Twitter Developer Auth Consumer Secret",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_AUTH_ACCESS_TOKEN_KEY": {
      "description": "Twitter Developer Auth Access Token Key",
      "required": true
    },
    "KHOROS_NETWORK_TWITTER_AUTH_ACCESS_TOKEN_SECRET": {
      "description": "Twitter Auth Access Token Secret",
      "required": true
    },
    "KHOROS_NETWORK_FACEBOOK_EXTERNAL_ID": {
      "description": "Facebook Page's External ID",
      "required": true
    }
  }
}
